{"version":3,"sources":["components/VisibilitySensor.js","img/img4.jpg","img/img3.jpg","Backdrop.js","shaders/fragment.js","shaders/vertex.js","App.js","index.js"],"names":["VisibilitySensor","props","state","active","this","once","children","otherProps","onChange","isVisible","setState","console","log","Component","Backdrop","stop","paused","play","setupResize","mount","addEventListener","resize","handleUpdate","newData","prevState","data","time","isRunning","distortion","bloomStrength","renderer","THREE","setSize","window","innerWidth","innerHeight","container","camera","position","set","scene","setClearColor","setPixelRatio","devicePixelRatio","width","clientWidth","height","clientHeight","appendChild","domElement","addPost","addMesh","settings","init","gsap","to","material","uniforms","duration","value","ease","progress","delay","bloomPass","strength","renderScene","RenderPass","UnrealBloomPass","threshold","bloomThreshold","radius","bloomRadius","composer","EffectComposer","addPass","fragmentShader","vertexShader","extensions","derivatives","type","t","load","t1","resolution","uvRate1","side","geometry","plane","add","aspect","updateProjectionMatrix","_time","requestID","requestAnimationFrame","bind","render","cancelAnimationFrame","removeChild","id","ref","App","className","href","partialVisibility","transform","style","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8a381375.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport VSensor from \"react-visibility-sensor\";\n\nclass VisibilitySensor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: true\n    };\n  }\n\n  render() {\n    const { active } = this.state;\n    const { once, children, ...otherProps } = this.props;\n    return (\n      <VSensor\n        active={active}\n        onChange={isVisible => {\n          once &&\n            isVisible &&\n            this.setState({ active: false }, () =>\n              console.log(\"turned the things off\")\n            );\n        }}\n        {...otherProps}\n      >\n        {({ isVisible }) => children({ isVisible })}\n      </VSensor>\n    );\n  }\n}\n\n\n\nexport default VisibilitySensor;\n","export default __webpack_public_path__ + \"static/media/img4.a5bf396c.jpg\";","export default __webpack_public_path__ + \"static/media/img3.1d24b7c4.jpg\";","import React, { Component } from \"react\";\n\nimport { fragment } from \"./shaders/fragment\";\nimport { vertex } from \"./shaders/vertex\";\n\nimport t from \"./img/img4.jpg\";\nimport t1 from \"./img/img3.jpg\";\n\nimport * as THREE from \"three\";\n\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport { gsap } from \"gsap\";\n\nclass Backdrop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      paused: true,\n      isRunning: false,\n\n      data: {\n        distortion: 0.0,\n        bloomStrength: 0.0,\n      },\n    };\n  }\n\n\n\n  componentDidMount() {\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.container = this.mount;\n\n    this.camera = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      5000\n    );\n\n    this.camera.position.set(0, 0, 1000);\n    this.scene = new THREE.Scene();\n    //this.textures = [new THREE.TextureLoader().load(t)];\n    //this.renderer.physicallyCorrectLights = true;\n    this.renderer.setClearColor(0x000000, 1);\n    //this.renderer.outputEncoding = THREE.sRGBEncoding;\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n\n    this.width = this.mount.clientWidth;\n    this.height = this.mount.clientHeight;\n    this.mount.appendChild(this.renderer.domElement);\n    //this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n    this.addPost();\n    this.addMesh();\n    this.settings();\n    this.resize();\n\n    this.init();\n\n    this.mount.addEventListener(\"click\", () => {\n    \n      gsap.to(this.material.uniforms.distortion, {\n        duration: 2,\n        value: 2,\n        ease: \"power2.inOut\",\n      });\n\n      gsap.to(this.material.uniforms.progress, {\n        duration: 0.5,\n        value: 1,\n        delay: 1.5,\n      });\n      gsap.to(this.bloomPass, {\n        duration: 2,\n        strength: 6,\n        ease: \"power2.in\",\n      });\n\n      gsap.to(this.material.uniforms.distortion, {\n        duration: 2,\n        value: 0,\n        delay: 2,\n        ease: \"power2.inOut\",\n      });\n      gsap.to(this.bloomPass, {\n        duration: 2,\n        strength: 0,\n        delay: 2,\n        ease: \"power2.out\",\n       \n     \n      });\n    });\n  }\n\n  settings() {\n    let that = this;\n    this.settings = {\n      progress: 0,\n      distortion: 0,\n    };\n  }\n\n  addPost() {\n    this.renderScene = new RenderPass(this.scene, this.camera);\n\n    this.bloomPass = new UnrealBloomPass(\n      new THREE.Vector2(window.innerWidth, window.innerHeight),\n      1.5,\n      0.4,\n      0.85\n    );\n\n    this.bloomPass.threshold = this.state.data.bloomThreshold;\n    this.bloomPass.strength = this.state.data.bloomStrength;\n    this.bloomPass.radius = this.state.data.bloomRadius;\n\n    this.composer = new EffectComposer(this.renderer);\n    this.composer.addPass(this.renderScene);\n    this.composer.addPass(this.bloomPass);\n  }\n\n  addMesh() {\n    this.material = new THREE.ShaderMaterial({\n      fragmentShader: fragment,\n      vertexShader: vertex,\n         extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives: enable\",\n      }, \n      uniforms: {\n        time: { type: \"f\", value: 0 },\n\n        distortion: { type: \"f\", value: 0.0 },\n        t: { type: \"t\", value: new THREE.TextureLoader().load(t) },\n        t1: { type: \"t\", value: new THREE.TextureLoader().load(t1) },\n        resolution: { type: \"v4\", value: new THREE.Vector4() },\n        progress: { type: \"f\", value: 0 },\n        uvRate1: {\n          value: new THREE.Vector2(1, 1),\n        },\n      },\n      side: THREE.DoubleSide,\n    });\n\n   \n\n    this.geometry = new THREE.PlaneBufferGeometry(1920, 1280, 960, 640);\n\n    this.plane = new THREE.Points(this.geometry, this.material);\n    this.scene.add(this.plane);\n  }\n\n  stop = () => {\n    this.setState({\n      paused: true,\n    });\n  };\n\n  play = () => {\n    this.setState({\n      paused: false,\n    });\n  };\n\n  setupResize = () => {\n    this.mount.addEventListener(\"resize\", this.resize);\n  };\n\n  handleUpdate = (newData) =>\n    this.setState((prevState) => ({\n      data: { ...prevState.data, ...newData },\n    }));\n\n  resize() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n    this.composer.setSize(width, height);\n\n    this.camera.updateProjectionMatrix();\n  }\n\n  init() {\n    let _time = this.state.time;\n    _time += 0.05;\n    this.setState({\n      time: _time,\n    });\n\n    this.material.uniforms.time.value = this.state.time;\n    //this.material.uniforms.distortion.value = this.state.data.distortion;\n    //this.bloomPass.strength = this.state.data.bloomStrength;\n    this.requestID = requestAnimationFrame(this.init.bind(this));\n    //this.renderer.render(this.scene, this.camera);\n    this.composer.render();\n  }\n\n  componentWillUnmount() {\n    //this.mount.removeEventListener(\"resize\", this.resize);\n\n    this.stop();\n    //this.loader = null;\n    this.scene = null;\n    this.camera = null;\n    //this.controls.dispose();\n    cancelAnimationFrame(this.requestID);\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  render() {\n\n\n    return (\n      <>\n       \n        <div id=\"container\" ref={(ref) => (this.mount = ref)} />\n      </>\n    );\n  }\n}\n\nexport default Backdrop;\n","export var fragment = `\n\nuniform float time;\nuniform float progress;\nuniform sampler2D t; \nuniform sampler2D t1; \nuniform vec4 resolution;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nfloat PI = 3.141592653589793238;\n\nvoid main()\t{\n    \n    vec4 tt = texture2D(t,vUv);\n    vec4 tt1 = texture2D(t1,vUv);\n\n    vec4 finalTexture = mix(tt, tt1, progress);\n\n    gl_FragColor = finalTexture;\n\n    if(gl_FragColor.r < 0.1 && gl_FragColor.b<0.1 && gl_FragColor.g<0.1) discard;\n    \n    //gl_FragColor = vec4(1.,0.,0.,0.5);\n\n}\n`;\n","export var vertex = `\n\nuniform float time;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nuniform sampler2D t; \nuniform float distortion;\n\nfloat PI = 3.141592653589793238;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r){\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v) {\n\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n  // Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n      i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n    + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n    + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n  //Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n  // Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\n\n}\n\n\n// via: https://petewerner.blogspot.jp/2015/02/intro-to-curl-noise.html\nvec3 curlNoise( vec3 p ){\n\n  const float e = 0.1;\n\n  float  n1 = snoise(vec3(p.x, p.y + e, p.z));\n  float  n2 = snoise(vec3(p.x, p.y - e, p.z));\n  float  n3 = snoise(vec3(p.x, p.y, p.z + e));\n  float  n4 = snoise(vec3(p.x, p.y, p.z - e));\n  float  n5 = snoise(vec3(p.x + e, p.y, p.z));\n  float  n6 = snoise(vec3(p.x - e, p.y, p.z));\n\n  float x = n2 - n1 - n4 + n3;\n  float y = n4 - n3 - n6 + n5;\n  float z = n6 - n5 - n2 + n1;\n\n\n  const float divisor = 1.0 / ( 2.0 * e );\n  return normalize( vec3( x , y , z ) * divisor );\n}\n\nvoid main()\t{\n    vUv = uv;\n    vec3 distortion1 = vec3(position.x*2., position.y, 1.) * curlNoise(vec3(\n      position.x*0.002 + time*0.1,\n      position.y*0.008 + time*0.1,\n      (position.x + position.y)*0.02 ))*distortion;\n    vec3 finalPosition = position + distortion1;\n    vec4 mvPosition = modelViewMatrix * vec4( finalPosition, 1.);\n    gl_PointSize = 2.; \n    gl_Position = projectionMatrix * mvPosition;\n\n}\n`;\n","import React from \"react\";\n\nimport { Spring } from \"react-spring/renderprops\";\nimport VisibilitySensor from \"./components/VisibilitySensor\";\nimport Backdrop from \"./Backdrop\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <>\n      <div className=\"frame\">\n        <h1 className=\"frame__title\">Webgl React Click</h1>\n        <div className=\"frame__links\"></div>\n        <div className=\"frame__nav\">\n          <a\n            className=\"frame__link\"\n            href=\"https://isengupt.github.io/fiber-website/\"\n          >\n            Previous\n          </a>\n          <a className=\"frame__link\" href=\"#\">\n            Resume\n          </a>\n          <a\n            className=\"frame__link\"\n            href=\"https://github.com/isengupt/webgl-click/\"\n          >\n            GitHub\n          </a>\n        </div>\n      </div>\n      <div className=\"main__item\">\n        <div className=\"text__container\">\n          <VisibilitySensor partialVisibility>\n            {({ isVisible }) => (\n              <>\n                <Spring\n                  delay={150}\n                  to={{\n                    transform: isVisible\n                      ? \"translateY(0px) rotate(0deg)\"\n                      : \"translateY(300px) rotate(20deg)\",\n                  }}\n                >\n                  {(props) => (\n                    <h3 className=\"moving__text\" style={{ ...props }}>\n                      Suspendisse\n                    </h3>\n                  )}\n                </Spring>\n              \n              </>\n            )}\n          </VisibilitySensor>\n\n        </div>\n        <Backdrop />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}